version: "3"
services:
  webapi:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports: 
      - "5000:5000"
      - "5001:5001"
      - "1234:1234"
    command: /bin/sh -c "while sleep 1000; do :; done"  
    volumes:
      - ../:/workspace:cached
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always 
    ports:
      - "3000:3000"
    environment:
      # Disable authentication and more or less all security
      # to be able to run it through forwarded ports in VS Online
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ENFORCE_DOMAIN=false
      - GF_SECURITY_COOKIE_SAMESITE=disabled
      - GF_SECURITY_ALLOW_EMBEDDING=true
  telegraf:
    image: telegraf 
    container_name: telegraf 
    restart: always 
    volumes:
      - ./../telegraf-volume/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  influxdb:
    image: influxdb:1.8.4
    container_name: influxdb 
    restart: always
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=telegraf
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_USER=user
      - INFLUXDB_USER_PASSWORD=user
  jaeger:
    image: jaegertracing/all-in-one:1.23
    environment: 
      - JAEGER_DISABLED=true
    container_name: jaeger
    restart: always
    ports:
        - "5775:5775/udp"
        - "6831:6831/udp"
        - "6832:6832/udp"
        - "5778:5778"
        - "16686:16686"
        - "14268:14268"
        - "14250:14250"
        - "9411:9411"
  unleashweb:
    build: Unleash 
    ports:
      - "4242:4242"
    environment:
      DATABASE_URL: "postgres://unleash_db_user:unleash@172.17.0.1:5432/unleashdb"
      DATABASE_SSL: "false"
      UNLEASH_URL: "http://localhost:4242"
    depends_on:
      - unleashdb
    command: npm run start
    healthcheck:
      test: ["CMD", "nc",  "-z", "172.17.0.1", "5432"]
      interval: 5s
      timeout: 30s 
      retries: 15
      start_period: 15s
  unleashdb:
    ports:
      - "5432:5432"
    expose:
      - "5432"
    image: postgres:10-alpine
    environment:
      POSTGRES_DB: "unleashdb"
      POSTGRES_USER: "unleash_db_user"
      POSTGRES_PASSWORD: "unleash"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    healthcheck:
      test: ["CMD", "pg_isready", "--username=unleash_db_user", "--password=unleash", "--host=172.17.0.1", "--port=5432"]
      interval: 2s
      timeout: 1m
      retries: 5
      start_period: 10s